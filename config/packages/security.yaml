security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        App\Entity\User:
            algorithm: bcrypt
            cost: 12

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                default_target_path: app_home
                enable_csrf: true
            logout:
                path: app_logout
                target: app_login
                invalidate_session: true
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2592000 # 30 days
                path: /
                always_remember_me: false

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/admin/users, roles: ROLE_SUPER_ADMIN }
        - { path: ^/admin, roles: ROLE_SUPER_ADMIN }
        - { path: ^/weg, roles: [ROLE_WEG_ADMIN, ROLE_PROPERTY_MANAGER, ROLE_SUPER_ADMIN] }
        - { path: ^/zahlung/new, roles: [ROLE_WEG_ADMIN, ROLE_ACCOUNTANT, ROLE_SUPER_ADMIN] }
        - { path: ^/zahlung/.*/(edit|delete), roles: [ROLE_WEG_ADMIN, ROLE_ACCOUNTANT, ROLE_SUPER_ADMIN] }
        - { path: ^/zahlung, roles: [ROLE_WEG_ADMIN, ROLE_ACCOUNTANT, ROLE_PROPERTY_MANAGER, ROLE_VIEWER, ROLE_SUPER_ADMIN] }
        - { path: ^/rechnung/new, roles: [ROLE_WEG_ADMIN, ROLE_ACCOUNTANT, ROLE_SUPER_ADMIN] }
        - { path: ^/rechnung/.*/(edit|delete), roles: [ROLE_WEG_ADMIN, ROLE_ACCOUNTANT, ROLE_SUPER_ADMIN] }
        - { path: ^/rechnung, roles: [ROLE_WEG_ADMIN, ROLE_ACCOUNTANT, ROLE_VIEWER, ROLE_SUPER_ADMIN] }
        - { path: ^/abrechnung, roles: [ROLE_WEG_ADMIN, ROLE_ACCOUNTANT, ROLE_SUPER_ADMIN] }
        - { path: ^/dienstleister/new, roles: [ROLE_WEG_ADMIN, ROLE_PROPERTY_MANAGER, ROLE_SUPER_ADMIN] }
        - { path: ^/dienstleister/.*/(edit|delete), roles: [ROLE_WEG_ADMIN, ROLE_PROPERTY_MANAGER, ROLE_SUPER_ADMIN] }
        - { path: ^/dienstleister, roles: [ROLE_WEG_ADMIN, ROLE_PROPERTY_MANAGER, ROLE_VIEWER, ROLE_SUPER_ADMIN] }
        - { path: ^/dokument/new, roles: [ROLE_WEG_ADMIN, ROLE_PROPERTY_MANAGER, ROLE_SUPER_ADMIN] }
        - { path: ^/dokument/.*/(edit|delete), roles: [ROLE_WEG_ADMIN, ROLE_PROPERTY_MANAGER, ROLE_SUPER_ADMIN] }
        - { path: ^/dokument, roles: [ROLE_WEG_ADMIN, ROLE_PROPERTY_MANAGER, ROLE_ACCOUNTANT, ROLE_VIEWER, ROLE_SUPER_ADMIN] }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/, roles: ROLE_VIEWER }

    role_hierarchy:
        ROLE_VIEWER: ROLE_USER
        ROLE_ACCOUNTANT: ROLE_VIEWER
        ROLE_PROPERTY_MANAGER: ROLE_VIEWER
        ROLE_WEG_ADMIN: [ROLE_ACCOUNTANT, ROLE_PROPERTY_MANAGER]
        ROLE_SUPER_ADMIN: [ROLE_WEG_ADMIN, ROLE_ACCOUNTANT, ROLE_PROPERTY_MANAGER, ROLE_VIEWER]

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
