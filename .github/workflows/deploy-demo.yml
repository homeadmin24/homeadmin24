name: Deploy to Demo

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      reset_data:
        description: 'Reset demo data (loads fresh fixtures)'
        required: false
        default: 'true'
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: demo

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH with keepalive
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DROPLET_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DEMO_DROPLET_HOST }} >> ~/.ssh/known_hosts

          # Configure SSH to keep connection alive during long builds
          cat >> ~/.ssh/config <<EOF
          Host ${{ secrets.DEMO_DROPLET_HOST }}
            ServerAliveInterval 30
            ServerAliveCountMax 120
            TCPKeepAlive yes
          EOF

      - name: Deploy to demo (using deploy script)
        env:
          RESET_DATA: ${{ github.event.inputs.reset_data || 'true' }}
        run: |
          # Run deployment script on server (handles build, migrations, fixtures)
          ssh -o ConnectTimeout=10 -o ServerAliveInterval=30 root@${{ secrets.DEMO_DROPLET_HOST }} \
            "cd /opt/homeadmin24-demo && \
             git pull origin main && \
             nohup bash .droplet/deploy-demo.sh ${{ secrets.DEMO_DOMAIN }} ${{ secrets.DEMO_EMAIL }} > /tmp/deploy.log 2>&1 &"

          # Wait for deployment to complete (check every 30 seconds, max 10 minutes)
          echo "Waiting for deployment to complete..."
          for i in {1..20}; do
            sleep 30
            if ssh -o ConnectTimeout=5 root@${{ secrets.DEMO_DROPLET_HOST }} \
               "docker ps | grep -q homeadmin24-demo-web && docker ps | grep homeadmin24-demo-web | grep -q 'Up'"; then
              echo "✅ Deployment complete - containers are running"
              break
            fi
            echo "⏳ Still deploying... ($((i*30))s elapsed)"
          done

      - name: Health check
        run: |
          sleep 10
          curl -f https://demo.homeadmin24.de/login || exit 1

      - name: Deployment summary
        if: success()
        run: |
          echo "=========================================="
          echo "✅ Demo Deployment Complete"
          echo "=========================================="
          echo ""
          echo "🎮 Demo: https://demo.homeadmin24.de"
          echo "📊 Data reset: ${{ github.event.inputs.reset_data || 'true' }}"
          echo "🔄 Auto-deploys on push to main"
          echo ""
