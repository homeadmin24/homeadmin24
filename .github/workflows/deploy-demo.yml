name: Deploy to Demo

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      reset_data:
        description: 'Reset demo data (loads fresh fixtures)'
        required: false
        default: 'true'
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: demo

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH with keepalive
        run: |
          set -e
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          echo "${{ secrets.DROPLET_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Scan SSH host keys
          ssh-keyscan -H ${{ secrets.DEMO_DROPLET_HOST }} >> ~/.ssh/known_hosts 2>&1 || echo "Warning: ssh-keyscan failed, continuing anyway"

          # Configure SSH to keep connection alive during long builds
          cat > ~/.ssh/config << 'SSH_CONFIG'
          Host *
            ServerAliveInterval 30
            ServerAliveCountMax 120
            TCPKeepAlive yes
            StrictHostKeyChecking accept-new
          SSH_CONFIG

          chmod 600 ~/.ssh/config

      - name: Trigger deployment on server
        run: |
          echo "Attempting to trigger deployment on demo server..."

          # Try to connect and trigger deployment (may fail if server is busy)
          # This is okay - the deployment will happen via webhook or manual trigger
          if ssh -o ConnectTimeout=30 -o ConnectionAttempts=3 root@${{ secrets.DEMO_DROPLET_HOST }} \
             "cd /opt/homeadmin24-demo && \
              git pull origin main && \
              nohup bash .droplet/deploy-demo.sh ${{ secrets.DEMO_DOMAIN }} ${{ secrets.DEMO_EMAIL }} > /tmp/deploy.log 2>&1 &" 2>&1; then
            echo "‚úÖ Deployment triggered successfully"
          else
            echo "‚ö†Ô∏è Could not connect to server (may be busy from previous deployment)"
            echo "The demo site will auto-update from git on next reset cycle (every 30 min)"
            echo "Or you can manually deploy by SSH-ing to the server"
          fi

      - name: Wait for deployment
        run: |
          echo "Waiting for demo site to become available..."
          echo "This may take 10-15 minutes during Docker rebuild"
          echo ""

          # Just wait a fixed time for the build to complete
          # We can't reliably check via SSH due to server load
          sleep 600  # 10 minutes

      - name: Health check
        run: |
          echo "Checking if demo site is accessible..."

          # Try up to 5 times with 30 second delays
          for attempt in {1..5}; do
            echo "Health check attempt $attempt/5..."

            if curl -f -s -o /dev/null -w "%{http_code}" https://demo.homeadmin24.de/login | grep -q "200"; then
              echo "‚úÖ Demo site is healthy and responding!"
              exit 0
            fi

            if [ $attempt -lt 5 ]; then
              echo "‚ùå Site not ready, waiting 30 seconds..."
              sleep 30
            fi
          done

          echo "‚ö†Ô∏è Site not responding after 5 attempts, but deployment may still be completing"
          echo "Check manually: https://demo.homeadmin24.de/login"
          exit 1

      - name: Deployment summary
        if: success()
        run: |
          echo "=========================================="
          echo "‚úÖ Demo Deployment Complete"
          echo "=========================================="
          echo ""
          echo "üéÆ Demo: https://demo.homeadmin24.de"
          echo "üìä Data reset: ${{ github.event.inputs.reset_data || 'true' }}"
          echo "üîÑ Auto-deploys on push to main"
          echo ""
